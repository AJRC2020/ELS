/**
 * generated by Xtext 2.32.0
 */
package org.xtext.example.dr.dataRetrieval.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.dr.dataRetrieval.DataRetrievalPackage;
import org.xtext.example.dr.dataRetrieval.Key;
import org.xtext.example.dr.dataRetrieval.OpType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Op Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.dr.dataRetrieval.impl.OpTypeImpl#getAverage <em>Average</em>}</li>
 *   <li>{@link org.xtext.example.dr.dataRetrieval.impl.OpTypeImpl#getSum <em>Sum</em>}</li>
 *   <li>{@link org.xtext.example.dr.dataRetrieval.impl.OpTypeImpl#getAll <em>All</em>}</li>
 *   <li>{@link org.xtext.example.dr.dataRetrieval.impl.OpTypeImpl#getKey1 <em>Key1</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OpTypeImpl extends MinimalEObjectImpl.Container implements OpType
{
  /**
   * The default value of the '{@link #getAverage() <em>Average</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAverage()
   * @generated
   * @ordered
   */
  protected static final String AVERAGE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAverage() <em>Average</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAverage()
   * @generated
   * @ordered
   */
  protected String average = AVERAGE_EDEFAULT;

  /**
   * The default value of the '{@link #getSum() <em>Sum</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSum()
   * @generated
   * @ordered
   */
  protected static final String SUM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSum() <em>Sum</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSum()
   * @generated
   * @ordered
   */
  protected String sum = SUM_EDEFAULT;

  /**
   * The default value of the '{@link #getAll() <em>All</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAll()
   * @generated
   * @ordered
   */
  protected static final String ALL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAll() <em>All</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAll()
   * @generated
   * @ordered
   */
  protected String all = ALL_EDEFAULT;

  /**
   * The cached value of the '{@link #getKey1() <em>Key1</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKey1()
   * @generated
   * @ordered
   */
  protected EList<Key> key1;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OpTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DataRetrievalPackage.Literals.OP_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAverage()
  {
    return average;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAverage(String newAverage)
  {
    String oldAverage = average;
    average = newAverage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.OP_TYPE__AVERAGE, oldAverage, average));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSum()
  {
    return sum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSum(String newSum)
  {
    String oldSum = sum;
    sum = newSum;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.OP_TYPE__SUM, oldSum, sum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAll()
  {
    return all;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAll(String newAll)
  {
    String oldAll = all;
    all = newAll;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.OP_TYPE__ALL, oldAll, all));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Key> getKey1()
  {
    if (key1 == null)
    {
      key1 = new EObjectContainmentEList<Key>(Key.class, this, DataRetrievalPackage.OP_TYPE__KEY1);
    }
    return key1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.OP_TYPE__KEY1:
        return ((InternalEList<?>)getKey1()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.OP_TYPE__AVERAGE:
        return getAverage();
      case DataRetrievalPackage.OP_TYPE__SUM:
        return getSum();
      case DataRetrievalPackage.OP_TYPE__ALL:
        return getAll();
      case DataRetrievalPackage.OP_TYPE__KEY1:
        return getKey1();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.OP_TYPE__AVERAGE:
        setAverage((String)newValue);
        return;
      case DataRetrievalPackage.OP_TYPE__SUM:
        setSum((String)newValue);
        return;
      case DataRetrievalPackage.OP_TYPE__ALL:
        setAll((String)newValue);
        return;
      case DataRetrievalPackage.OP_TYPE__KEY1:
        getKey1().clear();
        getKey1().addAll((Collection<? extends Key>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.OP_TYPE__AVERAGE:
        setAverage(AVERAGE_EDEFAULT);
        return;
      case DataRetrievalPackage.OP_TYPE__SUM:
        setSum(SUM_EDEFAULT);
        return;
      case DataRetrievalPackage.OP_TYPE__ALL:
        setAll(ALL_EDEFAULT);
        return;
      case DataRetrievalPackage.OP_TYPE__KEY1:
        getKey1().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.OP_TYPE__AVERAGE:
        return AVERAGE_EDEFAULT == null ? average != null : !AVERAGE_EDEFAULT.equals(average);
      case DataRetrievalPackage.OP_TYPE__SUM:
        return SUM_EDEFAULT == null ? sum != null : !SUM_EDEFAULT.equals(sum);
      case DataRetrievalPackage.OP_TYPE__ALL:
        return ALL_EDEFAULT == null ? all != null : !ALL_EDEFAULT.equals(all);
      case DataRetrievalPackage.OP_TYPE__KEY1:
        return key1 != null && !key1.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (average: ");
    result.append(average);
    result.append(", sum: ");
    result.append(sum);
    result.append(", all: ");
    result.append(all);
    result.append(')');
    return result.toString();
  }

} //OpTypeImpl
