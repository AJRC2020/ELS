/**
 * generated by Xtext 2.32.0
 */
package org.xtext.example.dr.dataRetrieval.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.dr.dataRetrieval.ConfigList;
import org.xtext.example.dr.dataRetrieval.DataRetrievalPackage;
import org.xtext.example.dr.dataRetrieval.Filter;
import org.xtext.example.dr.dataRetrieval.KeysToExtract;
import org.xtext.example.dr.dataRetrieval.Path;
import org.xtext.example.dr.dataRetrieval.RenameAll;
import org.xtext.example.dr.dataRetrieval.Source;
import org.xtext.example.dr.dataRetrieval.Threshold;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Config List</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.dr.dataRetrieval.impl.ConfigListImpl#getSource <em>Source</em>}</li>
 *   <li>{@link org.xtext.example.dr.dataRetrieval.impl.ConfigListImpl#getPath <em>Path</em>}</li>
 *   <li>{@link org.xtext.example.dr.dataRetrieval.impl.ConfigListImpl#getKeysToExtract <em>Keys To Extract</em>}</li>
 *   <li>{@link org.xtext.example.dr.dataRetrieval.impl.ConfigListImpl#getRenameAll <em>Rename All</em>}</li>
 *   <li>{@link org.xtext.example.dr.dataRetrieval.impl.ConfigListImpl#getFilter <em>Filter</em>}</li>
 *   <li>{@link org.xtext.example.dr.dataRetrieval.impl.ConfigListImpl#getThreshold <em>Threshold</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConfigListImpl extends MinimalEObjectImpl.Container implements ConfigList
{
  /**
   * The cached value of the '{@link #getSource() <em>Source</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSource()
   * @generated
   * @ordered
   */
  protected Source source;

  /**
   * The cached value of the '{@link #getPath() <em>Path</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPath()
   * @generated
   * @ordered
   */
  protected Path path;

  /**
   * The cached value of the '{@link #getKeysToExtract() <em>Keys To Extract</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKeysToExtract()
   * @generated
   * @ordered
   */
  protected KeysToExtract keysToExtract;

  /**
   * The cached value of the '{@link #getRenameAll() <em>Rename All</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRenameAll()
   * @generated
   * @ordered
   */
  protected RenameAll renameAll;

  /**
   * The cached value of the '{@link #getFilter() <em>Filter</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilter()
   * @generated
   * @ordered
   */
  protected Filter filter;

  /**
   * The cached value of the '{@link #getThreshold() <em>Threshold</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThreshold()
   * @generated
   * @ordered
   */
  protected Threshold threshold;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConfigListImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DataRetrievalPackage.Literals.CONFIG_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Source getSource()
  {
    return source;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSource(Source newSource, NotificationChain msgs)
  {
    Source oldSource = source;
    source = newSource;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.CONFIG_LIST__SOURCE, oldSource, newSource);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSource(Source newSource)
  {
    if (newSource != source)
    {
      NotificationChain msgs = null;
      if (source != null)
        msgs = ((InternalEObject)source).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.CONFIG_LIST__SOURCE, null, msgs);
      if (newSource != null)
        msgs = ((InternalEObject)newSource).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.CONFIG_LIST__SOURCE, null, msgs);
      msgs = basicSetSource(newSource, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.CONFIG_LIST__SOURCE, newSource, newSource));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Path getPath()
  {
    return path;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPath(Path newPath, NotificationChain msgs)
  {
    Path oldPath = path;
    path = newPath;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.CONFIG_LIST__PATH, oldPath, newPath);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPath(Path newPath)
  {
    if (newPath != path)
    {
      NotificationChain msgs = null;
      if (path != null)
        msgs = ((InternalEObject)path).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.CONFIG_LIST__PATH, null, msgs);
      if (newPath != null)
        msgs = ((InternalEObject)newPath).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.CONFIG_LIST__PATH, null, msgs);
      msgs = basicSetPath(newPath, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.CONFIG_LIST__PATH, newPath, newPath));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public KeysToExtract getKeysToExtract()
  {
    return keysToExtract;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetKeysToExtract(KeysToExtract newKeysToExtract, NotificationChain msgs)
  {
    KeysToExtract oldKeysToExtract = keysToExtract;
    keysToExtract = newKeysToExtract;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.CONFIG_LIST__KEYS_TO_EXTRACT, oldKeysToExtract, newKeysToExtract);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKeysToExtract(KeysToExtract newKeysToExtract)
  {
    if (newKeysToExtract != keysToExtract)
    {
      NotificationChain msgs = null;
      if (keysToExtract != null)
        msgs = ((InternalEObject)keysToExtract).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.CONFIG_LIST__KEYS_TO_EXTRACT, null, msgs);
      if (newKeysToExtract != null)
        msgs = ((InternalEObject)newKeysToExtract).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.CONFIG_LIST__KEYS_TO_EXTRACT, null, msgs);
      msgs = basicSetKeysToExtract(newKeysToExtract, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.CONFIG_LIST__KEYS_TO_EXTRACT, newKeysToExtract, newKeysToExtract));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RenameAll getRenameAll()
  {
    return renameAll;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRenameAll(RenameAll newRenameAll, NotificationChain msgs)
  {
    RenameAll oldRenameAll = renameAll;
    renameAll = newRenameAll;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.CONFIG_LIST__RENAME_ALL, oldRenameAll, newRenameAll);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRenameAll(RenameAll newRenameAll)
  {
    if (newRenameAll != renameAll)
    {
      NotificationChain msgs = null;
      if (renameAll != null)
        msgs = ((InternalEObject)renameAll).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.CONFIG_LIST__RENAME_ALL, null, msgs);
      if (newRenameAll != null)
        msgs = ((InternalEObject)newRenameAll).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.CONFIG_LIST__RENAME_ALL, null, msgs);
      msgs = basicSetRenameAll(newRenameAll, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.CONFIG_LIST__RENAME_ALL, newRenameAll, newRenameAll));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Filter getFilter()
  {
    return filter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFilter(Filter newFilter, NotificationChain msgs)
  {
    Filter oldFilter = filter;
    filter = newFilter;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.CONFIG_LIST__FILTER, oldFilter, newFilter);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFilter(Filter newFilter)
  {
    if (newFilter != filter)
    {
      NotificationChain msgs = null;
      if (filter != null)
        msgs = ((InternalEObject)filter).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.CONFIG_LIST__FILTER, null, msgs);
      if (newFilter != null)
        msgs = ((InternalEObject)newFilter).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.CONFIG_LIST__FILTER, null, msgs);
      msgs = basicSetFilter(newFilter, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.CONFIG_LIST__FILTER, newFilter, newFilter));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Threshold getThreshold()
  {
    return threshold;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetThreshold(Threshold newThreshold, NotificationChain msgs)
  {
    Threshold oldThreshold = threshold;
    threshold = newThreshold;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.CONFIG_LIST__THRESHOLD, oldThreshold, newThreshold);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setThreshold(Threshold newThreshold)
  {
    if (newThreshold != threshold)
    {
      NotificationChain msgs = null;
      if (threshold != null)
        msgs = ((InternalEObject)threshold).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.CONFIG_LIST__THRESHOLD, null, msgs);
      if (newThreshold != null)
        msgs = ((InternalEObject)newThreshold).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.CONFIG_LIST__THRESHOLD, null, msgs);
      msgs = basicSetThreshold(newThreshold, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.CONFIG_LIST__THRESHOLD, newThreshold, newThreshold));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.CONFIG_LIST__SOURCE:
        return basicSetSource(null, msgs);
      case DataRetrievalPackage.CONFIG_LIST__PATH:
        return basicSetPath(null, msgs);
      case DataRetrievalPackage.CONFIG_LIST__KEYS_TO_EXTRACT:
        return basicSetKeysToExtract(null, msgs);
      case DataRetrievalPackage.CONFIG_LIST__RENAME_ALL:
        return basicSetRenameAll(null, msgs);
      case DataRetrievalPackage.CONFIG_LIST__FILTER:
        return basicSetFilter(null, msgs);
      case DataRetrievalPackage.CONFIG_LIST__THRESHOLD:
        return basicSetThreshold(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.CONFIG_LIST__SOURCE:
        return getSource();
      case DataRetrievalPackage.CONFIG_LIST__PATH:
        return getPath();
      case DataRetrievalPackage.CONFIG_LIST__KEYS_TO_EXTRACT:
        return getKeysToExtract();
      case DataRetrievalPackage.CONFIG_LIST__RENAME_ALL:
        return getRenameAll();
      case DataRetrievalPackage.CONFIG_LIST__FILTER:
        return getFilter();
      case DataRetrievalPackage.CONFIG_LIST__THRESHOLD:
        return getThreshold();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.CONFIG_LIST__SOURCE:
        setSource((Source)newValue);
        return;
      case DataRetrievalPackage.CONFIG_LIST__PATH:
        setPath((Path)newValue);
        return;
      case DataRetrievalPackage.CONFIG_LIST__KEYS_TO_EXTRACT:
        setKeysToExtract((KeysToExtract)newValue);
        return;
      case DataRetrievalPackage.CONFIG_LIST__RENAME_ALL:
        setRenameAll((RenameAll)newValue);
        return;
      case DataRetrievalPackage.CONFIG_LIST__FILTER:
        setFilter((Filter)newValue);
        return;
      case DataRetrievalPackage.CONFIG_LIST__THRESHOLD:
        setThreshold((Threshold)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.CONFIG_LIST__SOURCE:
        setSource((Source)null);
        return;
      case DataRetrievalPackage.CONFIG_LIST__PATH:
        setPath((Path)null);
        return;
      case DataRetrievalPackage.CONFIG_LIST__KEYS_TO_EXTRACT:
        setKeysToExtract((KeysToExtract)null);
        return;
      case DataRetrievalPackage.CONFIG_LIST__RENAME_ALL:
        setRenameAll((RenameAll)null);
        return;
      case DataRetrievalPackage.CONFIG_LIST__FILTER:
        setFilter((Filter)null);
        return;
      case DataRetrievalPackage.CONFIG_LIST__THRESHOLD:
        setThreshold((Threshold)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.CONFIG_LIST__SOURCE:
        return source != null;
      case DataRetrievalPackage.CONFIG_LIST__PATH:
        return path != null;
      case DataRetrievalPackage.CONFIG_LIST__KEYS_TO_EXTRACT:
        return keysToExtract != null;
      case DataRetrievalPackage.CONFIG_LIST__RENAME_ALL:
        return renameAll != null;
      case DataRetrievalPackage.CONFIG_LIST__FILTER:
        return filter != null;
      case DataRetrievalPackage.CONFIG_LIST__THRESHOLD:
        return threshold != null;
    }
    return super.eIsSet(featureID);
  }

} //ConfigListImpl
