/**
 * generated by Xtext 2.32.0
 */
package org.xtext.example.dr.dataRetrieval.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.dr.dataRetrieval.ConfigList;
import org.xtext.example.dr.dataRetrieval.DataRetrievalPackage;
import org.xtext.example.dr.dataRetrieval.Dest;
import org.xtext.example.dr.dataRetrieval.OpList;
import org.xtext.example.dr.dataRetrieval.Retrieve;
import org.xtext.example.dr.dataRetrieval.SourceFolder;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Retrieve</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.dr.dataRetrieval.impl.RetrieveImpl#getDest <em>Dest</em>}</li>
 *   <li>{@link org.xtext.example.dr.dataRetrieval.impl.RetrieveImpl#getSourceFolder <em>Source Folder</em>}</li>
 *   <li>{@link org.xtext.example.dr.dataRetrieval.impl.RetrieveImpl#getConfigList <em>Config List</em>}</li>
 *   <li>{@link org.xtext.example.dr.dataRetrieval.impl.RetrieveImpl#getOpList <em>Op List</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RetrieveImpl extends MinimalEObjectImpl.Container implements Retrieve
{
  /**
   * The cached value of the '{@link #getDest() <em>Dest</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDest()
   * @generated
   * @ordered
   */
  protected Dest dest;

  /**
   * The cached value of the '{@link #getSourceFolder() <em>Source Folder</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSourceFolder()
   * @generated
   * @ordered
   */
  protected SourceFolder sourceFolder;

  /**
   * The cached value of the '{@link #getConfigList() <em>Config List</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConfigList()
   * @generated
   * @ordered
   */
  protected EList<ConfigList> configList;

  /**
   * The cached value of the '{@link #getOpList() <em>Op List</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOpList()
   * @generated
   * @ordered
   */
  protected EList<OpList> opList;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RetrieveImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DataRetrievalPackage.Literals.RETRIEVE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Dest getDest()
  {
    return dest;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDest(Dest newDest, NotificationChain msgs)
  {
    Dest oldDest = dest;
    dest = newDest;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.RETRIEVE__DEST, oldDest, newDest);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDest(Dest newDest)
  {
    if (newDest != dest)
    {
      NotificationChain msgs = null;
      if (dest != null)
        msgs = ((InternalEObject)dest).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.RETRIEVE__DEST, null, msgs);
      if (newDest != null)
        msgs = ((InternalEObject)newDest).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.RETRIEVE__DEST, null, msgs);
      msgs = basicSetDest(newDest, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.RETRIEVE__DEST, newDest, newDest));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SourceFolder getSourceFolder()
  {
    return sourceFolder;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSourceFolder(SourceFolder newSourceFolder, NotificationChain msgs)
  {
    SourceFolder oldSourceFolder = sourceFolder;
    sourceFolder = newSourceFolder;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.RETRIEVE__SOURCE_FOLDER, oldSourceFolder, newSourceFolder);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSourceFolder(SourceFolder newSourceFolder)
  {
    if (newSourceFolder != sourceFolder)
    {
      NotificationChain msgs = null;
      if (sourceFolder != null)
        msgs = ((InternalEObject)sourceFolder).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.RETRIEVE__SOURCE_FOLDER, null, msgs);
      if (newSourceFolder != null)
        msgs = ((InternalEObject)newSourceFolder).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DataRetrievalPackage.RETRIEVE__SOURCE_FOLDER, null, msgs);
      msgs = basicSetSourceFolder(newSourceFolder, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DataRetrievalPackage.RETRIEVE__SOURCE_FOLDER, newSourceFolder, newSourceFolder));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ConfigList> getConfigList()
  {
    if (configList == null)
    {
      configList = new EObjectContainmentEList<ConfigList>(ConfigList.class, this, DataRetrievalPackage.RETRIEVE__CONFIG_LIST);
    }
    return configList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<OpList> getOpList()
  {
    if (opList == null)
    {
      opList = new EObjectContainmentEList<OpList>(OpList.class, this, DataRetrievalPackage.RETRIEVE__OP_LIST);
    }
    return opList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.RETRIEVE__DEST:
        return basicSetDest(null, msgs);
      case DataRetrievalPackage.RETRIEVE__SOURCE_FOLDER:
        return basicSetSourceFolder(null, msgs);
      case DataRetrievalPackage.RETRIEVE__CONFIG_LIST:
        return ((InternalEList<?>)getConfigList()).basicRemove(otherEnd, msgs);
      case DataRetrievalPackage.RETRIEVE__OP_LIST:
        return ((InternalEList<?>)getOpList()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.RETRIEVE__DEST:
        return getDest();
      case DataRetrievalPackage.RETRIEVE__SOURCE_FOLDER:
        return getSourceFolder();
      case DataRetrievalPackage.RETRIEVE__CONFIG_LIST:
        return getConfigList();
      case DataRetrievalPackage.RETRIEVE__OP_LIST:
        return getOpList();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.RETRIEVE__DEST:
        setDest((Dest)newValue);
        return;
      case DataRetrievalPackage.RETRIEVE__SOURCE_FOLDER:
        setSourceFolder((SourceFolder)newValue);
        return;
      case DataRetrievalPackage.RETRIEVE__CONFIG_LIST:
        getConfigList().clear();
        getConfigList().addAll((Collection<? extends ConfigList>)newValue);
        return;
      case DataRetrievalPackage.RETRIEVE__OP_LIST:
        getOpList().clear();
        getOpList().addAll((Collection<? extends OpList>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.RETRIEVE__DEST:
        setDest((Dest)null);
        return;
      case DataRetrievalPackage.RETRIEVE__SOURCE_FOLDER:
        setSourceFolder((SourceFolder)null);
        return;
      case DataRetrievalPackage.RETRIEVE__CONFIG_LIST:
        getConfigList().clear();
        return;
      case DataRetrievalPackage.RETRIEVE__OP_LIST:
        getOpList().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DataRetrievalPackage.RETRIEVE__DEST:
        return dest != null;
      case DataRetrievalPackage.RETRIEVE__SOURCE_FOLDER:
        return sourceFolder != null;
      case DataRetrievalPackage.RETRIEVE__CONFIG_LIST:
        return configList != null && !configList.isEmpty();
      case DataRetrievalPackage.RETRIEVE__OP_LIST:
        return opList != null && !opList.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //RetrieveImpl
