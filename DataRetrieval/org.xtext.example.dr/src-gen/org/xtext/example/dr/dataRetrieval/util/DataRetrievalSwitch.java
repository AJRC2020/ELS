/**
 * generated by Xtext 2.32.0
 */
package org.xtext.example.dr.dataRetrieval.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.dr.dataRetrieval.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.dr.dataRetrieval.DataRetrievalPackage
 * @generated
 */
public class DataRetrievalSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static DataRetrievalPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataRetrievalSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = DataRetrievalPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case DataRetrievalPackage.RETRIEVE:
      {
        Retrieve retrieve = (Retrieve)theEObject;
        T result = caseRetrieve(retrieve);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.DEST:
      {
        Dest dest = (Dest)theEObject;
        T result = caseDest(dest);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.SOURCE_FOLDER:
      {
        SourceFolder sourceFolder = (SourceFolder)theEObject;
        T result = caseSourceFolder(sourceFolder);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.CONFIG_LIST:
      {
        ConfigList configList = (ConfigList)theEObject;
        T result = caseConfigList(configList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.OP_LIST:
      {
        OpList opList = (OpList)theEObject;
        T result = caseOpList(opList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.SOURCE:
      {
        Source source = (Source)theEObject;
        T result = caseSource(source);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.PATH:
      {
        Path path = (Path)theEObject;
        T result = casePath(path);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.KEYS_TO_EXTRACT:
      {
        KeysToExtract keysToExtract = (KeysToExtract)theEObject;
        T result = caseKeysToExtract(keysToExtract);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.KEY:
      {
        Key key = (Key)theEObject;
        T result = caseKey(key);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.RENAME:
      {
        Rename rename = (Rename)theEObject;
        T result = caseRename(rename);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.RENAME_ALL:
      {
        RenameAll renameAll = (RenameAll)theEObject;
        T result = caseRenameAll(renameAll);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.FULL_RENAME:
      {
        FullRename fullRename = (FullRename)theEObject;
        T result = caseFullRename(fullRename);
        if (result == null) result = caseRename(fullRename);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.ADD_PREFIX:
      {
        AddPrefix addPrefix = (AddPrefix)theEObject;
        T result = caseAddPrefix(addPrefix);
        if (result == null) result = caseRename(addPrefix);
        if (result == null) result = caseRenameAll(addPrefix);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.ADD_SUFFIX:
      {
        AddSuffix addSuffix = (AddSuffix)theEObject;
        T result = caseAddSuffix(addSuffix);
        if (result == null) result = caseRename(addSuffix);
        if (result == null) result = caseRenameAll(addSuffix);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.FILTER:
      {
        Filter filter = (Filter)theEObject;
        T result = caseFilter(filter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.THRESHOLD:
      {
        Threshold threshold = (Threshold)theEObject;
        T result = caseThreshold(threshold);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.TOP_N:
      {
        TopN topN = (TopN)theEObject;
        T result = caseTopN(topN);
        if (result == null) result = caseThreshold(topN);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.BOTTOM_N:
      {
        BottomN bottomN = (BottomN)theEObject;
        T result = caseBottomN(bottomN);
        if (result == null) result = caseThreshold(bottomN);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DataRetrievalPackage.OP_TYPE:
      {
        OpType opType = (OpType)theEObject;
        T result = caseOpType(opType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Retrieve</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Retrieve</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRetrieve(Retrieve object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Dest</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Dest</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDest(Dest object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Source Folder</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Source Folder</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSourceFolder(SourceFolder object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Config List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Config List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConfigList(ConfigList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Op List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Op List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOpList(OpList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Source</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Source</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSource(Source object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Path</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Path</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePath(Path object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Keys To Extract</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Keys To Extract</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseKeysToExtract(KeysToExtract object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Key</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Key</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseKey(Key object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rename</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rename</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRename(Rename object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rename All</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rename All</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRenameAll(RenameAll object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Full Rename</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Full Rename</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFullRename(FullRename object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Add Prefix</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Add Prefix</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAddPrefix(AddPrefix object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Add Suffix</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Add Suffix</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAddSuffix(AddSuffix object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Filter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Filter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFilter(Filter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Threshold</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Threshold</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseThreshold(Threshold object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Top N</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Top N</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTopN(TopN object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Bottom N</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Bottom N</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBottomN(BottomN object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Op Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Op Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOpType(OpType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //DataRetrievalSwitch
