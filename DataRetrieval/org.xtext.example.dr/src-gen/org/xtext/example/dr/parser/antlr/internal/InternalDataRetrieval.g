/*
 * generated by Xtext 2.32.0
 */
grammar InternalDataRetrieval;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.dr.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.dr.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.dr.services.DataRetrievalGrammarAccess;

}

@parser::members {

 	private DataRetrievalGrammarAccess grammarAccess;

    public InternalDataRetrievalParser(TokenStream input, DataRetrievalGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Retrieve";
   	}

   	@Override
   	protected DataRetrievalGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRetrieve
entryRuleRetrieve returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRetrieveRule()); }
	iv_ruleRetrieve=ruleRetrieve
	{ $current=$iv_ruleRetrieve.current; }
	EOF;

// Rule Retrieve
ruleRetrieve returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='retrieve'
		{
			newLeafNode(otherlv_0, grammarAccess.getRetrieveAccess().getRetrieveKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRetrieveAccess().getDestDestParserRuleCall_1_0());
				}
				lv_dest_1_0=ruleDest
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRetrieveRule());
					}
					set(
						$current,
						"dest",
						lv_dest_1_0,
						"org.xtext.example.dr.DataRetrieval.Dest");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRetrieveAccess().getSourceFolderSourceFolderParserRuleCall_2_0());
				}
				lv_sourceFolder_2_0=ruleSourceFolder
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRetrieveRule());
					}
					set(
						$current,
						"sourceFolder",
						lv_sourceFolder_2_0,
						"org.xtext.example.dr.DataRetrieval.SourceFolder");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getRetrieveAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRetrieveAccess().getConfigListConfigListParserRuleCall_4_0());
				}
				lv_configList_4_0=ruleConfigList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRetrieveRule());
					}
					add(
						$current,
						"configList",
						lv_configList_4_0,
						"org.xtext.example.dr.DataRetrieval.ConfigList");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getRetrieveAccess().getOpListOpListParserRuleCall_5_0());
				}
				lv_opList_5_0=ruleOpList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRetrieveRule());
					}
					add(
						$current,
						"opList",
						lv_opList_5_0,
						"org.xtext.example.dr.DataRetrieval.OpList");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getRetrieveAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDest
entryRuleDest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDestRule()); }
	iv_ruleDest=ruleDest
	{ $current=$iv_ruleDest.current; }
	EOF;

// Rule Dest
ruleDest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='destination='
		{
			newLeafNode(otherlv_0, grammarAccess.getDestAccess().getDestinationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDestAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDestRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSourceFolder
entryRuleSourceFolder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceFolderRule()); }
	iv_ruleSourceFolder=ruleSourceFolder
	{ $current=$iv_ruleSourceFolder.current; }
	EOF;

// Rule SourceFolder
ruleSourceFolder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='folder='
		{
			newLeafNode(otherlv_0, grammarAccess.getSourceFolderAccess().getFolderKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSourceFolderAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSourceFolderRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleConfigList
entryRuleConfigList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigListRule()); }
	iv_ruleConfigList=ruleConfigList
	{ $current=$iv_ruleConfigList.current; }
	EOF;

// Rule ConfigList
ruleConfigList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extraction'
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigListAccess().getExtractionKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigListAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigListAccess().getSourceSourceParserRuleCall_2_0());
				}
				lv_source_2_0=ruleSource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigListRule());
					}
					set(
						$current,
						"source",
						lv_source_2_0,
						"org.xtext.example.dr.DataRetrieval.Source");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigListAccess().getPathPathParserRuleCall_3_0());
				}
				lv_path_3_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigListRule());
					}
					set(
						$current,
						"path",
						lv_path_3_0,
						"org.xtext.example.dr.DataRetrieval.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigListAccess().getKeysToExtractKeysToExtractParserRuleCall_4_0());
				}
				lv_keysToExtract_4_0=ruleKeysToExtract
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigListRule());
					}
					set(
						$current,
						"keysToExtract",
						lv_keysToExtract_4_0,
						"org.xtext.example.dr.DataRetrieval.KeysToExtract");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigListAccess().getRenameAllRenameAllParserRuleCall_5_0());
				}
				lv_renameAll_5_0=ruleRenameAll
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigListRule());
					}
					set(
						$current,
						"renameAll",
						lv_renameAll_5_0,
						"org.xtext.example.dr.DataRetrieval.RenameAll");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigListAccess().getFilterFilterParserRuleCall_6_0_0());
					}
					lv_filter_6_0=ruleFilter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigListRule());
						}
						set(
							$current,
							"filter",
							lv_filter_6_0,
							"org.xtext.example.dr.DataRetrieval.Filter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigListAccess().getThresholdThresholdParserRuleCall_6_1_0());
					}
					lv_threshold_7_0=ruleThreshold
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigListRule());
						}
						set(
							$current,
							"threshold",
							lv_threshold_7_0,
							"org.xtext.example.dr.DataRetrieval.Threshold");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getConfigListAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleOpList
entryRuleOpList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpListRule()); }
	iv_ruleOpList=ruleOpList
	{ $current=$iv_ruleOpList.current; }
	EOF;

// Rule OpList
ruleOpList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='operation'
		{
			newLeafNode(otherlv_0, grammarAccess.getOpListAccess().getOperationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getOpListAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOpListAccess().getOpTypeOpTypeParserRuleCall_2_0());
				}
				lv_opType_2_0=ruleOpType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOpListRule());
					}
					set(
						$current,
						"opType",
						lv_opType_2_0,
						"org.xtext.example.dr.DataRetrieval.OpType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getOpListAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleSource
entryRuleSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceRule()); }
	iv_ruleSource=ruleSource
	{ $current=$iv_ruleSource.current; }
	EOF;

// Rule Source
ruleSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='source='
		{
			newLeafNode(otherlv_0, grammarAccess.getSourceAccess().getSourceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSourceAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSourceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRulePath
entryRulePath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathRule()); }
	iv_rulePath=rulePath
	{ $current=$iv_rulePath.current; }
	EOF;

// Rule Path
rulePath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='path='
		{
			newLeafNode(otherlv_0, grammarAccess.getPathAccess().getPathKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPathAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPathRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleKeysToExtract
entryRuleKeysToExtract returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeysToExtractRule()); }
	iv_ruleKeysToExtract=ruleKeysToExtract
	{ $current=$iv_ruleKeysToExtract.current; }
	EOF;

// Rule KeysToExtract
ruleKeysToExtract returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getKeysToExtractAccess().getKeysToExtractAction_0(),
					$current);
			}
		)
		otherlv_1='get=['
		{
			newLeafNode(otherlv_1, grammarAccess.getKeysToExtractAccess().getGetKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKeysToExtractAccess().getKey1KeyParserRuleCall_2_0());
				}
				lv_key1_2_0=ruleKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeysToExtractRule());
					}
					add(
						$current,
						"key1",
						lv_key1_2_0,
						"org.xtext.example.dr.DataRetrieval.Key");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getKeysToExtractAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getKeysToExtractAccess().getKey1KeyParserRuleCall_3_1_0());
					}
					lv_key1_4_0=ruleKey
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeysToExtractRule());
						}
						add(
							$current,
							"key1",
							lv_key1_4_0,
							"org.xtext.example.dr.DataRetrieval.Key");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getKeysToExtractAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleKey
entryRuleKey returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyRule()); }
	iv_ruleKey=ruleKey
	{ $current=$iv_ruleKey.current; }
	EOF;

// Rule Key
ruleKey returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_STRING
				{
					newLeafNode(lv_name_0_0, grammarAccess.getKeyAccess().getNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKeyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_1='->'
			{
				newLeafNode(otherlv_1, grammarAccess.getKeyAccess().getHyphenMinusGreaterThanSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getKeyAccess().getRenameRenameParserRuleCall_1_1_0());
					}
					lv_rename_2_0=ruleRename
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeyRule());
						}
						set(
							$current,
							"rename",
							lv_rename_2_0,
							"org.xtext.example.dr.DataRetrieval.Rename");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleRename
entryRuleRename returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRenameRule()); }
	iv_ruleRename=ruleRename
	{ $current=$iv_ruleRename.current; }
	EOF;

// Rule Rename
ruleRename returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRenameAccess().getFullRenameParserRuleCall_0());
		}
		this_FullRename_0=ruleFullRename
		{
			$current = $this_FullRename_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRenameAccess().getAddPrefixParserRuleCall_1());
		}
		this_AddPrefix_1=ruleAddPrefix
		{
			$current = $this_AddPrefix_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRenameAccess().getAddSuffixParserRuleCall_2());
		}
		this_AddSuffix_2=ruleAddSuffix
		{
			$current = $this_AddSuffix_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRenameAll
entryRuleRenameAll returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRenameAllRule()); }
	iv_ruleRenameAll=ruleRenameAll
	{ $current=$iv_ruleRenameAll.current; }
	EOF;

// Rule RenameAll
ruleRenameAll returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRenameAllAccess().getAddPrefixParserRuleCall_0());
		}
		this_AddPrefix_0=ruleAddPrefix
		{
			$current = $this_AddPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRenameAllAccess().getAddSuffixParserRuleCall_1());
		}
		this_AddSuffix_1=ruleAddSuffix
		{
			$current = $this_AddSuffix_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFullRename
entryRuleFullRename returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFullRenameRule()); }
	iv_ruleFullRename=ruleFullRename
	{ $current=$iv_ruleFullRename.current; }
	EOF;

// Rule FullRename
ruleFullRename returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rename='
		{
			newLeafNode(otherlv_0, grammarAccess.getFullRenameAccess().getRenameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFullRenameAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFullRenameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_n_2_0='N'
				{
					newLeafNode(lv_n_2_0, grammarAccess.getFullRenameAccess().getNNKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFullRenameRule());
					}
					setWithLastConsumed($current, "n", lv_n_2_0, "N");
				}
			)
		)?
	)
;

// Entry rule entryRuleAddPrefix
entryRuleAddPrefix returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddPrefixRule()); }
	iv_ruleAddPrefix=ruleAddPrefix
	{ $current=$iv_ruleAddPrefix.current; }
	EOF;

// Rule AddPrefix
ruleAddPrefix returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='prepend='
		{
			newLeafNode(otherlv_0, grammarAccess.getAddPrefixAccess().getPrependKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAddPrefixAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddPrefixRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleAddSuffix
entryRuleAddSuffix returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddSuffixRule()); }
	iv_ruleAddSuffix=ruleAddSuffix
	{ $current=$iv_ruleAddSuffix.current; }
	EOF;

// Rule AddSuffix
ruleAddSuffix returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='append='
		{
			newLeafNode(otherlv_0, grammarAccess.getAddSuffixAccess().getAppendKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAddSuffixAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddSuffixRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleFilter
entryRuleFilter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFilterRule()); }
	iv_ruleFilter=ruleFilter
	{ $current=$iv_ruleFilter.current; }
	EOF;

// Rule Filter
ruleFilter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='filter='
		{
			newLeafNode(otherlv_0, grammarAccess.getFilterAccess().getFilterKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFilterAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFilterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleThreshold
entryRuleThreshold returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThresholdRule()); }
	iv_ruleThreshold=ruleThreshold
	{ $current=$iv_ruleThreshold.current; }
	EOF;

// Rule Threshold
ruleThreshold returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getThresholdAccess().getTopNParserRuleCall_0());
		}
		this_TopN_0=ruleTopN
		{
			$current = $this_TopN_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getThresholdAccess().getBottomNParserRuleCall_1());
		}
		this_BottomN_1=ruleBottomN
		{
			$current = $this_BottomN_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTopN
entryRuleTopN returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTopNRule()); }
	iv_ruleTopN=ruleTopN
	{ $current=$iv_ruleTopN.current; }
	EOF;

// Rule TopN
ruleTopN returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='top='
		{
			newLeafNode(otherlv_0, grammarAccess.getTopNAccess().getTopKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_INT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getTopNAccess().getValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTopNRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleBottomN
entryRuleBottomN returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBottomNRule()); }
	iv_ruleBottomN=ruleBottomN
	{ $current=$iv_ruleBottomN.current; }
	EOF;

// Rule BottomN
ruleBottomN returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='bottom='
		{
			newLeafNode(otherlv_0, grammarAccess.getBottomNAccess().getBottomKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_INT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getBottomNAccess().getValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBottomNRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleOpType
entryRuleOpType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpTypeRule()); }
	iv_ruleOpType=ruleOpType
	{ $current=$iv_ruleOpType.current; }
	EOF;

// Rule OpType
ruleOpType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_average_0_0='average='
					{
						newLeafNode(lv_average_0_0, grammarAccess.getOpTypeAccess().getAverageAverageKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOpTypeRule());
						}
						setWithLastConsumed($current, "average", lv_average_0_0, "average=");
					}
				)
			)
			    |
			(
				(
					lv_sum_1_0='sum='
					{
						newLeafNode(lv_sum_1_0, grammarAccess.getOpTypeAccess().getSumSumKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOpTypeRule());
						}
						setWithLastConsumed($current, "sum", lv_sum_1_0, "sum=");
					}
				)
			)
		)
		(
			(
				(
					lv_all_2_0='all'
					{
						newLeafNode(lv_all_2_0, grammarAccess.getOpTypeAccess().getAllAllKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOpTypeRule());
						}
						setWithLastConsumed($current, "all", lv_all_2_0, "all");
					}
				)
			)
			    |
			(
				otherlv_3='['
				{
					newLeafNode(otherlv_3, grammarAccess.getOpTypeAccess().getLeftSquareBracketKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOpTypeAccess().getKey1KeyParserRuleCall_1_1_1_0());
						}
						lv_key1_4_0=ruleKey
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOpTypeRule());
							}
							add(
								$current,
								"key1",
								lv_key1_4_0,
								"org.xtext.example.dr.DataRetrieval.Key");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5=','
					{
						newLeafNode(otherlv_5, grammarAccess.getOpTypeAccess().getCommaKeyword_1_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getOpTypeAccess().getKey1KeyParserRuleCall_1_1_2_1_0());
							}
							lv_key1_6_0=ruleKey
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getOpTypeRule());
								}
								add(
									$current,
									"key1",
									lv_key1_6_0,
									"org.xtext.example.dr.DataRetrieval.Key");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_7=']'
				{
					newLeafNode(otherlv_7, grammarAccess.getOpTypeAccess().getRightSquareBracketKeyword_1_1_3());
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
