/*
 * generated by Xtext 2.32.0
 */
grammar InternalDataRetrieval;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.dr.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.dr.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.dr.services.DataRetrievalGrammarAccess;

}
@parser::members {
	private DataRetrievalGrammarAccess grammarAccess;

	public void setGrammarAccess(DataRetrievalGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRetrieve
entryRuleRetrieve
:
{ before(grammarAccess.getRetrieveRule()); }
	 ruleRetrieve
{ after(grammarAccess.getRetrieveRule()); } 
	 EOF 
;

// Rule Retrieve
ruleRetrieve 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRetrieveAccess().getGroup()); }
		(rule__Retrieve__Group__0)
		{ after(grammarAccess.getRetrieveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDest
entryRuleDest
:
{ before(grammarAccess.getDestRule()); }
	 ruleDest
{ after(grammarAccess.getDestRule()); } 
	 EOF 
;

// Rule Dest
ruleDest 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDestAccess().getGroup()); }
		(rule__Dest__Group__0)
		{ after(grammarAccess.getDestAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceFolder
entryRuleSourceFolder
:
{ before(grammarAccess.getSourceFolderRule()); }
	 ruleSourceFolder
{ after(grammarAccess.getSourceFolderRule()); } 
	 EOF 
;

// Rule SourceFolder
ruleSourceFolder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceFolderAccess().getGroup()); }
		(rule__SourceFolder__Group__0)
		{ after(grammarAccess.getSourceFolderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfigList
entryRuleConfigList
:
{ before(grammarAccess.getConfigListRule()); }
	 ruleConfigList
{ after(grammarAccess.getConfigListRule()); } 
	 EOF 
;

// Rule ConfigList
ruleConfigList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigListAccess().getGroup()); }
		(rule__ConfigList__Group__0)
		{ after(grammarAccess.getConfigListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpList
entryRuleOpList
:
{ before(grammarAccess.getOpListRule()); }
	 ruleOpList
{ after(grammarAccess.getOpListRule()); } 
	 EOF 
;

// Rule OpList
ruleOpList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpListAccess().getGroup()); }
		(rule__OpList__Group__0)
		{ after(grammarAccess.getOpListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSource
entryRuleSource
:
{ before(grammarAccess.getSourceRule()); }
	 ruleSource
{ after(grammarAccess.getSourceRule()); } 
	 EOF 
;

// Rule Source
ruleSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceAccess().getGroup()); }
		(rule__Source__Group__0)
		{ after(grammarAccess.getSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePath
entryRulePath
:
{ before(grammarAccess.getPathRule()); }
	 rulePath
{ after(grammarAccess.getPathRule()); } 
	 EOF 
;

// Rule Path
rulePath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathAccess().getGroup()); }
		(rule__Path__Group__0)
		{ after(grammarAccess.getPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeysToExtract
entryRuleKeysToExtract
:
{ before(grammarAccess.getKeysToExtractRule()); }
	 ruleKeysToExtract
{ after(grammarAccess.getKeysToExtractRule()); } 
	 EOF 
;

// Rule KeysToExtract
ruleKeysToExtract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeysToExtractAccess().getGroup()); }
		(rule__KeysToExtract__Group__0)
		{ after(grammarAccess.getKeysToExtractAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKey
entryRuleKey
:
{ before(grammarAccess.getKeyRule()); }
	 ruleKey
{ after(grammarAccess.getKeyRule()); } 
	 EOF 
;

// Rule Key
ruleKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyAccess().getGroup()); }
		(rule__Key__Group__0)
		{ after(grammarAccess.getKeyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRename
entryRuleRename
:
{ before(grammarAccess.getRenameRule()); }
	 ruleRename
{ after(grammarAccess.getRenameRule()); } 
	 EOF 
;

// Rule Rename
ruleRename 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRenameAccess().getAlternatives()); }
		(rule__Rename__Alternatives)
		{ after(grammarAccess.getRenameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRenameAll
entryRuleRenameAll
:
{ before(grammarAccess.getRenameAllRule()); }
	 ruleRenameAll
{ after(grammarAccess.getRenameAllRule()); } 
	 EOF 
;

// Rule RenameAll
ruleRenameAll 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRenameAllAccess().getAlternatives()); }
		(rule__RenameAll__Alternatives)
		{ after(grammarAccess.getRenameAllAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFullRename
entryRuleFullRename
:
{ before(grammarAccess.getFullRenameRule()); }
	 ruleFullRename
{ after(grammarAccess.getFullRenameRule()); } 
	 EOF 
;

// Rule FullRename
ruleFullRename 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFullRenameAccess().getGroup()); }
		(rule__FullRename__Group__0)
		{ after(grammarAccess.getFullRenameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddPrefix
entryRuleAddPrefix
:
{ before(grammarAccess.getAddPrefixRule()); }
	 ruleAddPrefix
{ after(grammarAccess.getAddPrefixRule()); } 
	 EOF 
;

// Rule AddPrefix
ruleAddPrefix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddPrefixAccess().getGroup()); }
		(rule__AddPrefix__Group__0)
		{ after(grammarAccess.getAddPrefixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddSuffix
entryRuleAddSuffix
:
{ before(grammarAccess.getAddSuffixRule()); }
	 ruleAddSuffix
{ after(grammarAccess.getAddSuffixRule()); } 
	 EOF 
;

// Rule AddSuffix
ruleAddSuffix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddSuffixAccess().getGroup()); }
		(rule__AddSuffix__Group__0)
		{ after(grammarAccess.getAddSuffixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilter
entryRuleFilter
:
{ before(grammarAccess.getFilterRule()); }
	 ruleFilter
{ after(grammarAccess.getFilterRule()); } 
	 EOF 
;

// Rule Filter
ruleFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterAccess().getGroup()); }
		(rule__Filter__Group__0)
		{ after(grammarAccess.getFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThreshold
entryRuleThreshold
:
{ before(grammarAccess.getThresholdRule()); }
	 ruleThreshold
{ after(grammarAccess.getThresholdRule()); } 
	 EOF 
;

// Rule Threshold
ruleThreshold 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThresholdAccess().getAlternatives()); }
		(rule__Threshold__Alternatives)
		{ after(grammarAccess.getThresholdAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTopN
entryRuleTopN
:
{ before(grammarAccess.getTopNRule()); }
	 ruleTopN
{ after(grammarAccess.getTopNRule()); } 
	 EOF 
;

// Rule TopN
ruleTopN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTopNAccess().getGroup()); }
		(rule__TopN__Group__0)
		{ after(grammarAccess.getTopNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBottomN
entryRuleBottomN
:
{ before(grammarAccess.getBottomNRule()); }
	 ruleBottomN
{ after(grammarAccess.getBottomNRule()); } 
	 EOF 
;

// Rule BottomN
ruleBottomN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBottomNAccess().getGroup()); }
		(rule__BottomN__Group__0)
		{ after(grammarAccess.getBottomNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpType
entryRuleOpType
:
{ before(grammarAccess.getOpTypeRule()); }
	 ruleOpType
{ after(grammarAccess.getOpTypeRule()); } 
	 EOF 
;

// Rule OpType
ruleOpType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpTypeAccess().getGroup()); }
		(rule__OpType__Group__0)
		{ after(grammarAccess.getOpTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameAccess().getFullRenameParserRuleCall_0()); }
		ruleFullRename
		{ after(grammarAccess.getRenameAccess().getFullRenameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRenameAccess().getAddPrefixParserRuleCall_1()); }
		ruleAddPrefix
		{ after(grammarAccess.getRenameAccess().getAddPrefixParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRenameAccess().getAddSuffixParserRuleCall_2()); }
		ruleAddSuffix
		{ after(grammarAccess.getRenameAccess().getAddSuffixParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameAll__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameAllAccess().getAddPrefixParserRuleCall_0()); }
		ruleAddPrefix
		{ after(grammarAccess.getRenameAllAccess().getAddPrefixParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRenameAllAccess().getAddSuffixParserRuleCall_1()); }
		ruleAddSuffix
		{ after(grammarAccess.getRenameAllAccess().getAddSuffixParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThresholdAccess().getTopNParserRuleCall_0()); }
		ruleTopN
		{ after(grammarAccess.getThresholdAccess().getTopNParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getThresholdAccess().getBottomNParserRuleCall_1()); }
		ruleBottomN
		{ after(grammarAccess.getThresholdAccess().getBottomNParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpTypeAccess().getAverageAssignment_0_0()); }
		(rule__OpType__AverageAssignment_0_0)
		{ after(grammarAccess.getOpTypeAccess().getAverageAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpTypeAccess().getSumAssignment_0_1()); }
		(rule__OpType__SumAssignment_0_1)
		{ after(grammarAccess.getOpTypeAccess().getSumAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpTypeAccess().getAllAssignment_1_0()); }
		(rule__OpType__AllAssignment_1_0)
		{ after(grammarAccess.getOpTypeAccess().getAllAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpTypeAccess().getGroup_1_1()); }
		(rule__OpType__Group_1_1__0)
		{ after(grammarAccess.getOpTypeAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Retrieve__Group__0__Impl
	rule__Retrieve__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetrieveAccess().getRetrieveKeyword_0()); }
	'retrieve'
	{ after(grammarAccess.getRetrieveAccess().getRetrieveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Retrieve__Group__1__Impl
	rule__Retrieve__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetrieveAccess().getDestAssignment_1()); }
	(rule__Retrieve__DestAssignment_1)
	{ after(grammarAccess.getRetrieveAccess().getDestAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Retrieve__Group__2__Impl
	rule__Retrieve__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetrieveAccess().getSourceFolderAssignment_2()); }
	(rule__Retrieve__SourceFolderAssignment_2)?
	{ after(grammarAccess.getRetrieveAccess().getSourceFolderAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Retrieve__Group__3__Impl
	rule__Retrieve__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetrieveAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getRetrieveAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Retrieve__Group__4__Impl
	rule__Retrieve__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRetrieveAccess().getConfigListAssignment_4()); }
		(rule__Retrieve__ConfigListAssignment_4)
		{ after(grammarAccess.getRetrieveAccess().getConfigListAssignment_4()); }
	)
	(
		{ before(grammarAccess.getRetrieveAccess().getConfigListAssignment_4()); }
		(rule__Retrieve__ConfigListAssignment_4)*
		{ after(grammarAccess.getRetrieveAccess().getConfigListAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Retrieve__Group__5__Impl
	rule__Retrieve__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetrieveAccess().getOpListAssignment_5()); }
	(rule__Retrieve__OpListAssignment_5)*
	{ after(grammarAccess.getRetrieveAccess().getOpListAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Retrieve__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetrieveAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getRetrieveAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dest__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dest__Group__0__Impl
	rule__Dest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dest__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestAccess().getDestinationKeyword_0()); }
	'destination='
	{ after(grammarAccess.getDestAccess().getDestinationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dest__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dest__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dest__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestAccess().getNameAssignment_1()); }
	(rule__Dest__NameAssignment_1)
	{ after(grammarAccess.getDestAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceFolder__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceFolder__Group__0__Impl
	rule__SourceFolder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFolder__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceFolderAccess().getFolderKeyword_0()); }
	'folder='
	{ after(grammarAccess.getSourceFolderAccess().getFolderKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFolder__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceFolder__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFolder__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceFolderAccess().getNameAssignment_1()); }
	(rule__SourceFolder__NameAssignment_1)
	{ after(grammarAccess.getSourceFolderAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigList__Group__0__Impl
	rule__ConfigList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigListAccess().getExtractionKeyword_0()); }
	'extraction'
	{ after(grammarAccess.getConfigListAccess().getExtractionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigList__Group__1__Impl
	rule__ConfigList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigListAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getConfigListAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigList__Group__2__Impl
	rule__ConfigList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigListAccess().getSourceAssignment_2()); }
	(rule__ConfigList__SourceAssignment_2)
	{ after(grammarAccess.getConfigListAccess().getSourceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigList__Group__3__Impl
	rule__ConfigList__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigListAccess().getPathAssignment_3()); }
	(rule__ConfigList__PathAssignment_3)?
	{ after(grammarAccess.getConfigListAccess().getPathAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigList__Group__4__Impl
	rule__ConfigList__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigListAccess().getKeysToExtractAssignment_4()); }
	(rule__ConfigList__KeysToExtractAssignment_4)?
	{ after(grammarAccess.getConfigListAccess().getKeysToExtractAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigList__Group__5__Impl
	rule__ConfigList__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigListAccess().getRenameAllAssignment_5()); }
	(rule__ConfigList__RenameAllAssignment_5)?
	{ after(grammarAccess.getConfigListAccess().getRenameAllAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigList__Group__6__Impl
	rule__ConfigList__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigListAccess().getGroup_6()); }
	(rule__ConfigList__Group_6__0)?
	{ after(grammarAccess.getConfigListAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigList__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigListAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getConfigListAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigList__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigList__Group_6__0__Impl
	rule__ConfigList__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigListAccess().getFilterAssignment_6_0()); }
	(rule__ConfigList__FilterAssignment_6_0)
	{ after(grammarAccess.getConfigListAccess().getFilterAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigList__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigListAccess().getThresholdAssignment_6_1()); }
	(rule__ConfigList__ThresholdAssignment_6_1)
	{ after(grammarAccess.getConfigListAccess().getThresholdAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpList__Group__0__Impl
	rule__OpList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpListAccess().getOperationKeyword_0()); }
	'operation'
	{ after(grammarAccess.getOpListAccess().getOperationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpList__Group__1__Impl
	rule__OpList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpListAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getOpListAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpList__Group__2__Impl
	rule__OpList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OpList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpListAccess().getOpTypeAssignment_2()); }
	(rule__OpList__OpTypeAssignment_2)
	{ after(grammarAccess.getOpListAccess().getOpTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpListAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getOpListAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__0__Impl
	rule__Source__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getSourceKeyword_0()); }
	'source='
	{ after(grammarAccess.getSourceAccess().getSourceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getNameAssignment_1()); }
	(rule__Source__NameAssignment_1)
	{ after(grammarAccess.getSourceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__0__Impl
	rule__Path__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getPathKeyword_0()); }
	'path='
	{ after(grammarAccess.getPathAccess().getPathKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getNameAssignment_1()); }
	(rule__Path__NameAssignment_1)
	{ after(grammarAccess.getPathAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeysToExtract__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeysToExtract__Group__0__Impl
	rule__KeysToExtract__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysToExtract__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeysToExtractAccess().getKeysToExtractAction_0()); }
	()
	{ after(grammarAccess.getKeysToExtractAccess().getKeysToExtractAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysToExtract__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeysToExtract__Group__1__Impl
	rule__KeysToExtract__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysToExtract__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeysToExtractAccess().getGetKeyword_1()); }
	'get=['
	{ after(grammarAccess.getKeysToExtractAccess().getGetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysToExtract__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeysToExtract__Group__2__Impl
	rule__KeysToExtract__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysToExtract__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeysToExtractAccess().getKey1Assignment_2()); }
	(rule__KeysToExtract__Key1Assignment_2)
	{ after(grammarAccess.getKeysToExtractAccess().getKey1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysToExtract__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeysToExtract__Group__3__Impl
	rule__KeysToExtract__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysToExtract__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeysToExtractAccess().getGroup_3()); }
	(rule__KeysToExtract__Group_3__0)*
	{ after(grammarAccess.getKeysToExtractAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysToExtract__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeysToExtract__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysToExtract__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeysToExtractAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getKeysToExtractAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeysToExtract__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeysToExtract__Group_3__0__Impl
	rule__KeysToExtract__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysToExtract__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeysToExtractAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getKeysToExtractAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysToExtract__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeysToExtract__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysToExtract__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeysToExtractAccess().getKey1Assignment_3_1()); }
	(rule__KeysToExtract__Key1Assignment_3_1)
	{ after(grammarAccess.getKeysToExtractAccess().getKey1Assignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Key__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Key__Group__0__Impl
	rule__Key__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyAccess().getNameAssignment_0()); }
	(rule__Key__NameAssignment_0)
	{ after(grammarAccess.getKeyAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Key__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyAccess().getGroup_1()); }
	(rule__Key__Group_1__0)?
	{ after(grammarAccess.getKeyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Key__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Key__Group_1__0__Impl
	rule__Key__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); }
	'->'
	{ after(grammarAccess.getKeyAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Key__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyAccess().getRenameAssignment_1_1()); }
	(rule__Key__RenameAssignment_1_1)
	{ after(grammarAccess.getKeyAccess().getRenameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FullRename__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FullRename__Group__0__Impl
	rule__FullRename__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FullRename__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFullRenameAccess().getRenameKeyword_0()); }
	'rename='
	{ after(grammarAccess.getFullRenameAccess().getRenameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FullRename__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FullRename__Group__1__Impl
	rule__FullRename__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FullRename__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFullRenameAccess().getNameAssignment_1()); }
	(rule__FullRename__NameAssignment_1)
	{ after(grammarAccess.getFullRenameAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FullRename__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FullRename__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FullRename__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFullRenameAccess().getNAssignment_2()); }
	(rule__FullRename__NAssignment_2)?
	{ after(grammarAccess.getFullRenameAccess().getNAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddPrefix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPrefix__Group__0__Impl
	rule__AddPrefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPrefix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPrefixAccess().getPrependKeyword_0()); }
	'prepend='
	{ after(grammarAccess.getAddPrefixAccess().getPrependKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPrefix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPrefix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPrefix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPrefixAccess().getNameAssignment_1()); }
	(rule__AddPrefix__NameAssignment_1)
	{ after(grammarAccess.getAddPrefixAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddSuffix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSuffix__Group__0__Impl
	rule__AddSuffix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSuffix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSuffixAccess().getAppendKeyword_0()); }
	'append='
	{ after(grammarAccess.getAddSuffixAccess().getAppendKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSuffix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSuffix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSuffix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSuffixAccess().getNameAssignment_1()); }
	(rule__AddSuffix__NameAssignment_1)
	{ after(grammarAccess.getAddSuffixAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Filter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__0__Impl
	rule__Filter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getFilterKeyword_0()); }
	'filter='
	{ after(grammarAccess.getFilterAccess().getFilterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getNameAssignment_1()); }
	(rule__Filter__NameAssignment_1)
	{ after(grammarAccess.getFilterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TopN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopN__Group__0__Impl
	rule__TopN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopNAccess().getTopKeyword_0()); }
	'top='
	{ after(grammarAccess.getTopNAccess().getTopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopNAccess().getValueAssignment_1()); }
	(rule__TopN__ValueAssignment_1)
	{ after(grammarAccess.getTopNAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BottomN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BottomN__Group__0__Impl
	rule__BottomN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BottomN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBottomNAccess().getBottomKeyword_0()); }
	'bottom='
	{ after(grammarAccess.getBottomNAccess().getBottomKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BottomN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BottomN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BottomN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBottomNAccess().getValueAssignment_1()); }
	(rule__BottomN__ValueAssignment_1)
	{ after(grammarAccess.getBottomNAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpType__Group__0__Impl
	rule__OpType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpTypeAccess().getAlternatives_0()); }
	(rule__OpType__Alternatives_0)
	{ after(grammarAccess.getOpTypeAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpTypeAccess().getAlternatives_1()); }
	(rule__OpType__Alternatives_1)
	{ after(grammarAccess.getOpTypeAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpType__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpType__Group_1_1__0__Impl
	rule__OpType__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpTypeAccess().getLeftSquareBracketKeyword_1_1_0()); }
	'['
	{ after(grammarAccess.getOpTypeAccess().getLeftSquareBracketKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpType__Group_1_1__1__Impl
	rule__OpType__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpTypeAccess().getKey1Assignment_1_1_1()); }
	(rule__OpType__Key1Assignment_1_1_1)
	{ after(grammarAccess.getOpTypeAccess().getKey1Assignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpType__Group_1_1__2__Impl
	rule__OpType__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpTypeAccess().getGroup_1_1_2()); }
	(rule__OpType__Group_1_1_2__0)*
	{ after(grammarAccess.getOpTypeAccess().getGroup_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpType__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpTypeAccess().getRightSquareBracketKeyword_1_1_3()); }
	']'
	{ after(grammarAccess.getOpTypeAccess().getRightSquareBracketKeyword_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpType__Group_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpType__Group_1_1_2__0__Impl
	rule__OpType__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Group_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpTypeAccess().getCommaKeyword_1_1_2_0()); }
	','
	{ after(grammarAccess.getOpTypeAccess().getCommaKeyword_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Group_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpType__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Group_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpTypeAccess().getKey1Assignment_1_1_2_1()); }
	(rule__OpType__Key1Assignment_1_1_2_1)
	{ after(grammarAccess.getOpTypeAccess().getKey1Assignment_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Retrieve__DestAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRetrieveAccess().getDestDestParserRuleCall_1_0()); }
		ruleDest
		{ after(grammarAccess.getRetrieveAccess().getDestDestParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__SourceFolderAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRetrieveAccess().getSourceFolderSourceFolderParserRuleCall_2_0()); }
		ruleSourceFolder
		{ after(grammarAccess.getRetrieveAccess().getSourceFolderSourceFolderParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__ConfigListAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRetrieveAccess().getConfigListConfigListParserRuleCall_4_0()); }
		ruleConfigList
		{ after(grammarAccess.getRetrieveAccess().getConfigListConfigListParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Retrieve__OpListAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRetrieveAccess().getOpListOpListParserRuleCall_5_0()); }
		ruleOpList
		{ after(grammarAccess.getRetrieveAccess().getOpListOpListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dest__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getDestAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFolder__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceFolderAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSourceFolderAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__SourceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigListAccess().getSourceSourceParserRuleCall_2_0()); }
		ruleSource
		{ after(grammarAccess.getConfigListAccess().getSourceSourceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__PathAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigListAccess().getPathPathParserRuleCall_3_0()); }
		rulePath
		{ after(grammarAccess.getConfigListAccess().getPathPathParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__KeysToExtractAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigListAccess().getKeysToExtractKeysToExtractParserRuleCall_4_0()); }
		ruleKeysToExtract
		{ after(grammarAccess.getConfigListAccess().getKeysToExtractKeysToExtractParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__RenameAllAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigListAccess().getRenameAllRenameAllParserRuleCall_5_0()); }
		ruleRenameAll
		{ after(grammarAccess.getConfigListAccess().getRenameAllRenameAllParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__FilterAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigListAccess().getFilterFilterParserRuleCall_6_0_0()); }
		ruleFilter
		{ after(grammarAccess.getConfigListAccess().getFilterFilterParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigList__ThresholdAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigListAccess().getThresholdThresholdParserRuleCall_6_1_0()); }
		ruleThreshold
		{ after(grammarAccess.getConfigListAccess().getThresholdThresholdParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpList__OpTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpListAccess().getOpTypeOpTypeParserRuleCall_2_0()); }
		ruleOpType
		{ after(grammarAccess.getOpListAccess().getOpTypeOpTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSourceAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPathAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysToExtract__Key1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeysToExtractAccess().getKey1KeyParserRuleCall_2_0()); }
		ruleKey
		{ after(grammarAccess.getKeysToExtractAccess().getKey1KeyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysToExtract__Key1Assignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeysToExtractAccess().getKey1KeyParserRuleCall_3_1_0()); }
		ruleKey
		{ after(grammarAccess.getKeysToExtractAccess().getKey1KeyParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getNameSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getKeyAccess().getNameSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__RenameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getRenameRenameParserRuleCall_1_1_0()); }
		ruleRename
		{ after(grammarAccess.getKeyAccess().getRenameRenameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FullRename__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFullRenameAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getFullRenameAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FullRename__NAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFullRenameAccess().getNNKeyword_2_0()); }
		(
			{ before(grammarAccess.getFullRenameAccess().getNNKeyword_2_0()); }
			'N'
			{ after(grammarAccess.getFullRenameAccess().getNNKeyword_2_0()); }
		)
		{ after(grammarAccess.getFullRenameAccess().getNNKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPrefix__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddPrefixAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAddPrefixAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSuffix__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddSuffixAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAddSuffixAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getFilterAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopN__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopNAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getTopNAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BottomN__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBottomNAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getBottomNAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__AverageAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpTypeAccess().getAverageAverageKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getOpTypeAccess().getAverageAverageKeyword_0_0_0()); }
			'average='
			{ after(grammarAccess.getOpTypeAccess().getAverageAverageKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getOpTypeAccess().getAverageAverageKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__SumAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpTypeAccess().getSumSumKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getOpTypeAccess().getSumSumKeyword_0_1_0()); }
			'sum='
			{ after(grammarAccess.getOpTypeAccess().getSumSumKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getOpTypeAccess().getSumSumKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__AllAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpTypeAccess().getAllAllKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getOpTypeAccess().getAllAllKeyword_1_0_0()); }
			'all'
			{ after(grammarAccess.getOpTypeAccess().getAllAllKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getOpTypeAccess().getAllAllKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Key1Assignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpTypeAccess().getKey1KeyParserRuleCall_1_1_1_0()); }
		ruleKey
		{ after(grammarAccess.getOpTypeAccess().getKey1KeyParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpType__Key1Assignment_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpTypeAccess().getKey1KeyParserRuleCall_1_1_2_1_0()); }
		ruleKey
		{ after(grammarAccess.getOpTypeAccess().getKey1KeyParserRuleCall_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
